
@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@400;600&display=swap');


* {
    margin: 0;
    padding: 0;
}


body {
    height: 100vh;
    box-sizing: border-box;
    background-color: black;
    color: #F6F6F6;
    ;
}

.titulo-destaque {
    color: #22D4FD;
}

.apresentacao {
    margin: 10%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.apresentacao__conteudo {
    width: 615px;
}

.apresentacao__conteudo__titulo {
    font-size: 36px;
    font-family: 'Krona One', sans-serif;
}

.apresentacao__conteudo__texto {
    font-size: 24px;
    font-family: 'Montserrat', sans-serif;
}

.apresentacao__links {
    display: flex;
    justify-content: space-evenly;
}

.apresentacao__links__link {
    background-color: #22D4FD;
    width: 280px;
    text-align: center;
    border-radius: 16px;
    font-weight: 600;
    font-size: 24px;
    padding: 21.5px 0;
    text-decoration: none;
    color: #000;
    font-family: 'Montserrat', sans-serif;
}
    /*quando o valor do padding for definido ele se replicará para todos os lados, e se quiser por exemplo só para
    um lado especifico, por exemplo somente para o vertical (|) temos que definir o valor para horizontal tambem
   como no caso acima, portanto, será de 0, dessa forma o horizontal permanece do tamanho default */ 



/* inicialmente, está sendo resetado o CSS para estilizar a página
pois quebra os padroes já definidos nos navegadores, entao teremos
flexibilidade de posicinar os elementos do nosso agrado. */

/*Esse projeto consiste num portifolio utilizando a pagina inteira
e se acessarmos o "body" do inspecionar ele informará o quanto
o elemento body do projeto está utilizando da tela. No caso, queremos que o
elemento body seja 100% da pagina, entao utilizamos o "height: 100vh"
ou seja, que a altura maxima do body será equivalente a tela toda. */

/*Para garantir que nenhum elemento fique fora dessa tela, aplicamos
o "box-sizing: border-box".
essa é uma ótima prática para aplicar em todos os projetos que criarem, 
caso a intenção seja evitar que a imagem saia do body, ou seja, evitar que o elemento 
"filho" saia do elemento "pai". */


/*Proxima aula
trilha: Angular: crie aplicações web ágeis

Curso: HTML e CSS: classes, posicionamento e flexbox
Aula: 2 temporada, aula 5 flexbox */